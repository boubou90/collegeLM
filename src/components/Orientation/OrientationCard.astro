---
interface Props {
  title: string;
  description: string;
  href: string;
}

const { title, description, href } = Astro.props;
---

<a href={href} class="orientation-card" data-aos="fade-up">
  <div class="card-content">
    <div class="text-content">
      <h3>{title}</h3>
      <p>{description}</p>
    </div>
  </div>
  <svg xmlns="http://www.w3.org/2000/svg" class="arrow-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
    <path d="M5 12h14"></path>
    <path d="m12 5 7 7-7 7"></path>
  </svg>
</a>

<style>
  .orientation-card {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    padding: 1.5rem;
    background: white;
    border-radius: 1rem;
    text-decoration: none;
    color: inherit;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1);
  }

  .orientation-card:hover {
    transform: translateX(10px);
    background: var(--primary);
    color: white;
  }

  .card-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    text-align: left;
    gap: 0.5rem;
  }

  .text-content {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  h3 {
    font-size: 1.4rem;
    margin: 0;
    line-height: 1.2;
  }

  p {
    color: #64748b;
    font-size: 1rem;
    line-height: 1.4;
    margin: 0;
  }

  .orientation-card:hover p {
    color: rgba(255, 255, 255, 0.9);
  }

  .arrow-icon {
    width: 1.5rem;
    height: 1.5rem;
    transition: transform 0.3s ease;
  }

  .orientation-card:hover .arrow-icon {
    transform: translateX(5px);
  }

  @media (max-width: 768px) {
    .orientation-card {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .card-content {
      width: 100%;
    }

    .arrow-icon {
      align-self: flex-end;
    }
  }
</style>